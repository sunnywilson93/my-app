{"id":"../node_modules/piral-base/esm/fetch.js","dependencies":[{"name":"/Users/nc23203-wilson/Documents/pocs/my-app/node_modules/piral-base/esm/fetch.js.map","includedInParent":true,"mtime":1653392427827},{"name":"/Users/nc23203-wilson/Documents/pocs/my-app/node_modules/piral-base/src/fetch.ts","includedInParent":true,"mtime":1653392427827},{"name":"/Users/nc23203-wilson/Documents/pocs/my-app/package.json","includedInParent":true,"mtime":1653396690861},{"name":"/Users/nc23203-wilson/Documents/pocs/my-app/node_modules/piral-base/package.json","includedInParent":true,"mtime":1653392427827}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchDependency = fetchDependency;\n\n/**\n * Uses the `fetch` function (must be available). If you\n * use this function make sure to use, e.g., `whatwg-fetch`\n * which comes with polyfills for older browsers.\n * @param url The URL to GET.\n * @returns A promise leading to the raw text content.\n */\nfunction fetchDependency(url) {\n  return fetch(url, {\n    method: 'GET',\n    cache: 'force-cache'\n  }).then(m => m.text());\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/fetch.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/fetch.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":15,"column":0}},{"source":"../src/fetch.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":15,"column":9}},{"source":"../src/fetch.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":15,"column":24}},{"source":"../src/fetch.ts","name":null,"original":{"line":8,"column":32},"generated":{"line":15,"column":25}},{"source":"../src/fetch.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":15,"column":28}},{"source":"../src/fetch.ts","name":null,"original":{"line":8,"column":43},"generated":{"line":15,"column":30}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":16,"column":2}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":16,"column":9}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":16,"column":14}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":16,"column":15}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":16,"column":18}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":16,"column":20}},{"source":"../src/fetch.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":17,"column":4}},{"source":"../src/fetch.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":17,"column":10}},{"source":"../src/fetch.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":17,"column":12}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":17,"column":17}},{"source":"../src/fetch.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":18,"column":4}},{"source":"../src/fetch.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":9}},{"source":"../src/fetch.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":18,"column":11}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":19,"column":2}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":19,"column":3}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":19,"column":4}},{"source":"../src/fetch.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":19,"column":5}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":19,"column":9}},{"source":"../src/fetch.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":19,"column":10}},{"source":"../src/fetch.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":19,"column":11}},{"source":"../src/fetch.ts","name":null,"original":{"line":12,"column":17},"generated":{"line":19,"column":15}},{"source":"../src/fetch.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":19,"column":16}},{"source":"../src/fetch.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":19,"column":17}},{"source":"../src/fetch.ts","name":null,"original":{"line":12,"column":17},"generated":{"line":19,"column":21}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":19,"column":23}},{"source":"../src/fetch.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":19,"column":24}},{"source":"../src/fetch.ts","name":null,"original":{"line":13,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../src/fetch.ts":"/**\n * Uses the `fetch` function (must be available). If you\n * use this function make sure to use, e.g., `whatwg-fetch`\n * which comes with polyfills for older browsers.\n * @param url The URL to GET.\n * @returns A promise leading to the raw text content.\n */\nexport function fetchDependency(url: string) {\n  return fetch(url, {\n    method: 'GET',\n    cache: 'force-cache',\n  }).then((m) => m.text());\n}\n"},"lineCount":null}},"error":null,"hash":"d2897c1f88d164cb49c5afaecaccb8cf","cacheData":{"env":{}}}