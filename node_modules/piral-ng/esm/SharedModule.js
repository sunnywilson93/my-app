var SharedModule_1;
import { __decorate } from "tslib";
import * as ngCore from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NgExtension } from './NgExtension';
import { ResourceUrlPipe } from './ResourceUrlPipe';
const ngc = ngCore;
const declarationsDef = [NgExtension, ResourceUrlPipe];
const exportsDef = [NgExtension, ResourceUrlPipe];
const importsDef = [CommonModule];
let SharedModule = SharedModule_1 = class SharedModule {
};
SharedModule.props = {};
// @ts-ignore
SharedModule.ɵfac = 'ɵɵinject' in ngc ? (t) => new (t || SharedModule_1)() : undefined;
// @ts-ignore
SharedModule.ɵmod = 'ɵɵdefineNgModule' in ngc
    ? ngc.ɵɵdefineNgModule({
        type: SharedModule_1,
    })
    : undefined;
// @ts-ignore
SharedModule.ɵinj = 'ɵɵdefineInjector' in ngc
    ? ngc.ɵɵdefineInjector({
        providers: [],
        imports: [importsDef],
    })
    : undefined;
SharedModule = SharedModule_1 = __decorate([
    NgModule({
        declarations: declarationsDef,
        providers: [],
        imports: importsDef,
        exports: exportsDef,
    })
], SharedModule);
export { SharedModule };
if ('ɵsetClassMetadata' in ngc) {
    ngc.ɵsetClassMetadata(SharedModule, [
        {
            type: NgModule,
            args: [
                {
                    declarations: declarationsDef,
                    providers: [],
                    imports: importsDef,
                    exports: exportsDef,
                },
            ],
        },
    ]);
}
//# sourceMappingURL=SharedModule.js.map