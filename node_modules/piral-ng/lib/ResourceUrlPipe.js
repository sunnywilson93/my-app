"use strict";
var ResourceUrlPipe_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceUrlPipe = void 0;
const tslib_1 = require("tslib");
const ngCore = require("@angular/core");
const core_1 = require("@angular/core");
const ngc = ngCore;
let ResourceUrlPipe = ResourceUrlPipe_1 = class ResourceUrlPipe {
    constructor(piral) {
        this.piral = piral;
    }
    transform(value) {
        const { basePath = '/' } = this.piral.meta;
        return basePath + value;
    }
};
// @ts-ignore
ResourceUrlPipe.ɵfac = 'ɵɵdirectiveInject' in ngc ? (t) => new (t || ResourceUrlPipe_1)(ngc.ɵɵdirectiveInject('piral', 16)) : undefined;
// @ts-ignore
ResourceUrlPipe.ɵpipe = 'ɵɵdefinePipe' in ngc ? ngc.ɵɵdefinePipe({ name: 'resourceUrl', type: ResourceUrlPipe_1, pure: true }) : undefined;
ResourceUrlPipe = ResourceUrlPipe_1 = (0, tslib_1.__decorate)([
    (0, core_1.Pipe)({ name: 'resourceUrl' }),
    (0, tslib_1.__param)(0, (0, core_1.Inject)('piral')),
    (0, tslib_1.__metadata)("design:paramtypes", [Object])
], ResourceUrlPipe);
exports.ResourceUrlPipe = ResourceUrlPipe;
if ('ɵsetClassMetadata' in ngc) {
    ngc.ɵsetClassMetadata(ResourceUrlPipe, [
        {
            type: core_1.Pipe,
            args: [{ name: 'resourceUrl' }],
        },
    ], () => [
        {
            type: undefined,
            decorators: [
                {
                    type: core_1.Inject,
                    args: ['piral'],
                },
            ],
        },
    ]);
}
//# sourceMappingURL=ResourceUrlPipe.js.map