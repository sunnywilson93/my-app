"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bootstrap = exports.prepareBootstrap = void 0;
const tslib_1 = require("tslib");
const startup_1 = require("./startup");
const utils_1 = require("./utils");
const module_1 = require("./module");
function prepareBootstrap(moduleOrComponent, piral) {
    const [annotation] = (0, utils_1.getAnnotations)(moduleOrComponent);
    // first way is to directly use a module, which is the legacy way
    // second way is to find a previously defined Angular module
    if (annotation && annotation.bootstrap) {
        // usually contains things like imports, exports, declarations, ...
        const [component] = annotation.bootstrap;
        annotation.exports = [component];
        (0, module_1.defineModule)(moduleOrComponent);
        return [...(0, module_1.getModuleInstance)(component, piral), component];
    }
    else {
        // usually contains things like selector, template or templateUrl, changeDetection, ...
        const result = (0, module_1.getModuleInstance)(moduleOrComponent, piral) || (0, module_1.createModuleInstance)(moduleOrComponent, piral);
        return [...result, moduleOrComponent];
    }
}
exports.prepareBootstrap = prepareBootstrap;
function bootstrap(result, node, props, context) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const [selectedModule, ngOptions, component] = result;
        const ref = yield (0, startup_1.startup)(selectedModule, context, ngOptions);
        if (ref) {
            ref.instance.attach(component, node, props);
            return () => ref.instance.detach(component, node);
        }
        return () => { };
    });
}
exports.bootstrap = bootstrap;
//# sourceMappingURL=bootstrap.js.map