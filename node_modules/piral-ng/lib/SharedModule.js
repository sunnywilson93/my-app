"use strict";
var SharedModule_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedModule = void 0;
const tslib_1 = require("tslib");
const ngCore = require("@angular/core");
const common_1 = require("@angular/common");
const core_1 = require("@angular/core");
const NgExtension_1 = require("./NgExtension");
const ResourceUrlPipe_1 = require("./ResourceUrlPipe");
const ngc = ngCore;
const declarationsDef = [NgExtension_1.NgExtension, ResourceUrlPipe_1.ResourceUrlPipe];
const exportsDef = [NgExtension_1.NgExtension, ResourceUrlPipe_1.ResourceUrlPipe];
const importsDef = [common_1.CommonModule];
let SharedModule = SharedModule_1 = class SharedModule {
};
SharedModule.props = {};
// @ts-ignore
SharedModule.ɵfac = 'ɵɵinject' in ngc ? (t) => new (t || SharedModule_1)() : undefined;
// @ts-ignore
SharedModule.ɵmod = 'ɵɵdefineNgModule' in ngc
    ? ngc.ɵɵdefineNgModule({
        type: SharedModule_1,
    })
    : undefined;
// @ts-ignore
SharedModule.ɵinj = 'ɵɵdefineInjector' in ngc
    ? ngc.ɵɵdefineInjector({
        providers: [],
        imports: [importsDef],
    })
    : undefined;
SharedModule = SharedModule_1 = (0, tslib_1.__decorate)([
    (0, core_1.NgModule)({
        declarations: declarationsDef,
        providers: [],
        imports: importsDef,
        exports: exportsDef,
    })
], SharedModule);
exports.SharedModule = SharedModule;
if ('ɵsetClassMetadata' in ngc) {
    ngc.ɵsetClassMetadata(SharedModule, [
        {
            type: core_1.NgModule,
            args: [
                {
                    declarations: declarationsDef,
                    providers: [],
                    imports: importsDef,
                    exports: exportsDef,
                },
            ],
        },
    ]);
}
//# sourceMappingURL=SharedModule.js.map