"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runRules = exports.ruleSummary = void 0;
const log_1 = require("./log");
function ruleSummary(errors, warnings) {
    if (errors.length > 0) {
        (0, log_1.fail)('validationFailed_0080', errors.length);
    }
    else if (warnings.length > 0) {
        (0, log_1.log)('validationWarned_0081', warnings.length);
    }
    else {
        (0, log_1.logDone)('Validation successful. No errors or warnings.');
    }
}
exports.ruleSummary = ruleSummary;
function runRules(rules, context, configurations = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        for (const rule of rules) {
            (0, log_1.log)('generalDebug_0003', `Running rule "${rule === null || rule === void 0 ? void 0 : rule.name}" ...`);
            const options = configurations[rule.name];
            yield rule.run(context, options);
        }
    });
}
exports.runRules = runRules;
//# sourceMappingURL=rules.js.map