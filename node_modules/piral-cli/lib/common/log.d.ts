import * as messages from '../messages';
import { LogLevels } from '../types';
declare type Messages = typeof messages;
declare type MessageTypes = keyof Messages;
export declare function setLogLevel(logLevel: LogLevels): void;
export declare function logInfo(message: string, ...args: Array<string | number | boolean>): string;
export declare function logDebug(message: string, ...args: Array<string | number | boolean>): string;
export declare function logVerbose(message: string, ...args: Array<string | number | boolean>): string;
export declare function logDone(message: string, ...args: Array<string | number | boolean>): string;
export declare function logWarn(message: string, ...args: Array<string | number | boolean>): string;
export declare function logFail(message: string, ...args: Array<string | number | boolean>): string;
export declare function progress(message: string, ...args: Array<string | number | boolean>): void;
export declare function logReset(): void;
export declare function fail<T extends MessageTypes>(type: T, ...args: Parameters<Messages[T]>): never;
export declare function log<T extends MessageTypes>(type: T, ...args: Parameters<Messages[T]>): string;
export {};
