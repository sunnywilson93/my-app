"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPiletRules = exports.addPiletRule = exports.getPiralRules = exports.addPiralRule = void 0;
const fs_1 = require("fs");
const common_1 = require("../common");
const piralRules = [];
const piletRules = [];
function getRules(target) {
    const prefix = `${target}-`;
    return new Promise((resolve, reject) => {
        (0, fs_1.readdir)(__dirname, (err, files) => {
            if (err) {
                reject(err);
            }
            else {
                resolve(files
                    .filter((name) => name.startsWith(prefix) && name.endsWith('.js'))
                    .map((fileName) => {
                    (0, common_1.log)('generalDebug_0003', `Including module "${fileName}" ...`);
                    const run = require(`./${fileName}`).default;
                    const name = fileName.substring(prefix.length).replace(/\.js$/, '');
                    (0, common_1.log)('generalDebug_0003', `Included rule with name: "${name}".`);
                    return {
                        run,
                        name,
                    };
                }));
            }
        });
    });
}
function addPiralRule(rule) {
    piralRules.push(rule);
}
exports.addPiralRule = addPiralRule;
function getPiralRules() {
    return __awaiter(this, void 0, void 0, function* () {
        (0, common_1.log)('generalDebug_0003', 'Getting Piral validation rules ...');
        const rules = yield getRules('piral');
        (0, common_1.log)('generalDebug_0003', `Found ${rules.length} rules.`);
        return [...rules, ...piralRules];
    });
}
exports.getPiralRules = getPiralRules;
function addPiletRule(rule) {
    piletRules.push(rule);
}
exports.addPiletRule = addPiletRule;
function getPiletRules() {
    return __awaiter(this, void 0, void 0, function* () {
        (0, common_1.log)('generalDebug_0003', 'Getting pilet validation rules ...');
        const rules = yield getRules('pilet');
        (0, common_1.log)('generalDebug_0003', `Found ${rules.length} rules.`);
        return [...rules, ...piletRules];
    });
}
exports.getPiletRules = getPiletRules;
//# sourceMappingURL=index.js.map