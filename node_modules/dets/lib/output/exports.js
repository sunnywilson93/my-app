"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringifyExports = exports.stringifyExport = void 0;
const stringify_1 = require("./stringify");
function stringifyExport(type) {
    switch (type === null || type === void 0 ? void 0 : type.kind) {
        case 'interface':
            return `${stringify_1.stringifyComment(type)}export interface ${type.name}${stringify_1.stringifyTypeArgs(type)}${stringify_1.stringifyExtends(type)} ${stringify_1.stringifyInterface(type)}`;
        case 'class':
            return `${stringify_1.stringifyComment(type)}export class ${type.name}${stringify_1.stringifyTypeArgs(type)}${stringify_1.stringifyExtends(type)}${stringify_1.stringifyImplements(type)} ${stringify_1.stringifyClass(type)}`;
        case 'alias':
            return `${stringify_1.stringifyComment(type)}export type ${type.name}${stringify_1.stringifyTypeArgs(type)} = ${stringify_1.stringifyNode(type.child)};`;
        case 'enumLiteral':
            return `${stringify_1.stringifyComment(type)}export ${type.const ? 'const enum' : 'enum'} ${type.name} ${stringify_1.stringifyEnum(type.values)}`;
        case 'const':
            return `${stringify_1.stringifyComment(type)}export const ${type.name}: ${stringify_1.stringifyNode(type.value)};`;
        case 'function':
            return `${stringify_1.stringifyComment(type)}export function ${type.name}${stringify_1.stringifySignature(type, 1 /* property */)};`;
        case 'default':
            const sc = type.value.kind === 'class' ? '' : ';';
            return `${stringify_1.stringifyComment(type)}export default ${stringify_1.stringifyNode(type.value)}${sc}`;
    }
    return '';
}
exports.stringifyExport = stringifyExport;
function stringifyExports(refs) {
    return refs
        .map((r) => stringifyExport(r))
        .filter((m) => !!m)
        .join('\n\n');
}
exports.stringifyExports = stringifyExports;
