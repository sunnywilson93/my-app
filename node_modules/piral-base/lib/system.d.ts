/// <reference types="systemjs" />
import 'systemjs/dist/system.js';
import 'systemjs/dist/extras/named-register.js';
import type { PiletMetadataV2 } from './types';
export interface ModuleResolver {
    (): any;
}
/**
 * Loads the provided SystemJS-powered pilet.
 * @param meta The pilet's metadata.
 */
export declare function loadSystemPilet(meta: PiletMetadataV2): Promise<any>;
/**
 * Loads the provided modules by their URL. Performs a
 * SystemJS import.
 * @param modules The names of the modules to resolve.
 */
export declare function loadSystemModule(source: string): Promise<[string, any]>;
/**
 * Registers all static global dependencies in the system.
 * @param modules The modules to register as dependencies.
 * @returns A promise when SystemJS included all dependencies.
 */
export declare function registerDependencies(modules: Record<string, any>): Promise<System.Module[]>;
/**
 * Registers a plain module in SystemJS.
 * @param name The name of the module
 * @param resolve The resolver for the module's content.
 */
export declare function registerModule(name: string, resolve: ModuleResolver): void;
