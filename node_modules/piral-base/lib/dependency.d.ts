import type { PiletApp, PiletMetadataV1, PiletMetadataBundle } from './types';
/**
 * Compiles the given content from a generic dependency.
 * @param name The name of the dependency to compile.
 * @param content The content of the dependency to compile.
 * @param link The optional link to the dependency.
 * @returns The evaluated dependency.
 */
export declare function evalDependency(name: string, content: string, link?: string): PiletApp;
/**
 * Compiles the given content from a module with a dependency resolution.
 * @param name The name of the dependency to compile.
 * @param content The content of the dependency to compile.
 * @param link The optional link to the dependency.
 * @returns The evaluated module.
 */
export declare function compileDependency(name: string, content: string, link?: string): Promise<PiletApp>;
declare global {
    interface HTMLScriptElement {
        app?: PiletApp;
    }
}
/**
 * Includes a dependency as a script.
 * @param link The link to the script.
 * @param integrity The integrity for the script, if any.
 * @param crossOrigin Defines if cross-origin should be used.
 * @returns The script element.
 */
export declare function includeScriptDependency(link: string, integrity?: string, crossOrigin?: string): Promise<HTMLScriptElement>;
/**
 * Includes the given single pilet script via its URL with a dependency resolution.
 * @param meta The meta data of the dependency to include.
 * @param crossOrigin The override for the cross-origin attribute.
 * @returns The evaluated module.
 */
export declare function includeDependency(meta: PiletMetadataV1, crossOrigin?: string): Promise<PiletApp>;
/**
 * Includes the given bundle script via its URL with a dependency resolution.
 * @param meta The meta data of the dependency to include.
 * @param crossOrigin The override for the cross-origin attribute.
 * @returns The evaluated module.
 */
export declare function includeBundle(meta: PiletMetadataBundle, crossOrigin?: string): Promise<PiletApp>;
