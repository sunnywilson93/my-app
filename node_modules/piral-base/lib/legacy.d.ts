import type { PiletMetadata } from './types';
/**
 * Loads a legacy (v0) or invalid pilet.
 * @param meta The metadata of the pilet.
 * @returns The evaluated pilet that can now be integrated.
 */
export declare function loadLegacyPilet(meta: PiletMetadata): Promise<import("./types").Pilet> | Promise<{
    setup(): void;
    content: string;
    noCache?: string | boolean;
    name: string;
    version: string;
    spec?: "v0";
    hash: string;
    custom?: any;
    config?: Record<string, any>;
    dependencies?: Record<string, string>;
    basePath?: string;
} | {
    setup(): void;
    link: string;
    name: string;
    version: string;
    spec?: "v0";
    hash: string;
    custom?: any;
    config?: Record<string, any>;
    dependencies?: Record<string, string>;
    basePath?: string;
} | {
    setup(): void;
    name: string;
    version: string;
    spec?: "v1";
    link: string;
    requireRef: string;
    integrity?: string;
    custom?: any;
    config?: Record<string, any>;
    dependencies?: Record<string, string>;
    basePath?: string;
} | {
    setup(): void;
    name: string;
    version: string;
    spec: "v2";
    requireRef: string;
    integrity?: string;
    link: string;
    custom?: any;
    config?: Record<string, any>;
    dependencies?: Record<string, string>;
    basePath?: string;
} | {
    setup(): void;
    name: string;
    version: string;
    spec: string;
    custom?: any;
    config?: Record<string, any>;
    dependencies?: Record<string, string>;
    basePath?: string;
} | {
    setup(): void;
    name?: string;
    spec?: "v1";
    link: string;
    bundle: string;
    integrity?: string;
    custom?: any;
    dependencies?: Record<string, string>;
    basePath?: string;
}>;
