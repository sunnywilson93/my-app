import { getDefaultLoader, extendLoader, } from 'piral-base';
import { globalDependencies } from './modules';
export function createPiletOptions({ context, loaders, loaderConfig, availablePilets, strategy, createApi, loadPilet, requestPilets, shareDependencies, debug, }) {
    const options = {
        config: loaderConfig,
        strategy,
        loadPilet: extendLoader(loadPilet !== null && loadPilet !== void 0 ? loadPilet : getDefaultLoader(loaderConfig), loaders),
        createApi,
        pilets: availablePilets,
        fetchPilets: requestPilets,
        dependencies: shareDependencies(globalDependencies),
    };
    // if we build the debug version of piral (debug and emulator build)
    if (process.env.DEBUG_PIRAL) {
        const { integrate } = require('../debug-piral');
        integrate(context, options, debug);
    }
    // if we build the emulator version of piral (shipped to pilets)
    if (process.env.DEBUG_PILET) {
        const { integrate } = require('../debug-pilet');
        integrate(context, options);
    }
    return options;
}
//# sourceMappingURL=helpers.js.map