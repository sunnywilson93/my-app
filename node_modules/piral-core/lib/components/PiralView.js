"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PiralView = void 0;
const React = require("react");
const react_router_1 = require("react-router");
const PiralRoutes_1 = require("./PiralRoutes");
const components_1 = require("./components");
const hooks_1 = require("../hooks");
const NotFound = (props) => React.createElement(components_1.PiralError, Object.assign({ type: "not_found" }, props));
const PiralContent = () => {
    const { error, loading, layout } = (0, hooks_1.useGlobalState)((m) => m.app);
    return error ? (React.createElement(components_1.PiralError, { type: "loading", error: error })) : loading ? (React.createElement(components_1.PiralLoadingIndicator, null)) : (React.createElement(components_1.PiralLayout, { currentLayout: layout },
        React.createElement(PiralRoutes_1.PiralRoutes, { NotFound: NotFound, RouteSwitch: components_1.PiralRouteSwitch })));
};
const FallbackRouter = (props) => {
    const publicPath = (0, hooks_1.useGlobalState)((s) => s.app.publicPath);
    return React.createElement(react_router_1.StaticRouter, Object.assign({ location: "/" }, props, { basename: publicPath }));
};
const Router = typeof window === 'undefined' ? FallbackRouter : components_1.PiralRouter;
const PiralProvider = ({ children }) => {
    const provider = (0, hooks_1.useGlobalState)((m) => m.provider) || React.Fragment;
    return React.createElement(provider, undefined, children);
};
/**
 * The component responsible for the generic view of the application.
 * This includes the global providers, the used Router, the current content and some convenience.
 */
const PiralView = ({ children }) => (React.createElement(PiralProvider, null,
    React.createElement(Router, null,
        React.createElement(PiralContent, null),
        children,
        React.createElement(components_1.PiralDebug, null))));
exports.PiralView = PiralView;
exports.PiralView.displayName = 'PiralView';
//# sourceMappingURL=PiralView.js.map