"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const helpers_1 = require("../helpers");
class StoreInjector {
    constructor(options, config) {
        const directory = options.directory || config.directory;
        const today = new Date().toJSON().substr(0, 10);
        this.config = options;
        this.db = helpers_1.open(path_1.resolve(directory, options.filename || `unknown-requests-${today}.json`));
    }
    getOptions() {
        return {
            file: {
                title: 'File location',
                description: 'Location of the file to store the unknown / unhandled requests.',
                type: 'text',
                value: this.db.file,
            },
        };
    }
    setOptions(options) {
        const { file } = options;
        if (file && file !== this.db.file) {
            this.db.switchTo(file);
        }
    }
    get name() {
        return 'store-injector';
    }
    get active() {
        return this.config.active;
    }
    set active(value) {
        this.config.active = value;
    }
    handle(request) {
        this.db.insert({
            request,
            response: {
                status: 404,
            },
        });
    }
}
exports.default = StoreInjector;
