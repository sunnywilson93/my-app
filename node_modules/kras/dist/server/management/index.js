"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withManagement = void 0;
const broadcast_1 = require("./broadcast");
const files_1 = require("./files");
const overview_1 = require("./overview");
const settings_1 = require("./settings");
const injectors_1 = require("./injectors");
const client_1 = require("./client");
const basics_1 = require("./basics");
const login_1 = require("./login");
const logs_1 = require("./logs");
function withManagement(server, config) {
    const api = config.api;
    if (api !== false) {
        const protect = login_1.getAuth(server, config);
        server.at(api).get(client_1.clientOf(server, config));
        server.at(api, 'login').post(login_1.userLogin(server, config));
        protect(server.at(api, 'config')).get(basics_1.configOf(server, config)).put(basics_1.updateClient(server, config));
        protect(server.at(api, 'logs')).get(logs_1.recentLogsOf(server)).delete(logs_1.allLogsOf(server)).feed(logs_1.liveLogs(server));
        protect(server.at(api, 'broadcast')).post(broadcast_1.broadcastAt(server));
        protect(server.at(api, 'data')).get(overview_1.overview(server)).feed(overview_1.liveData(server));
        protect(server.at(api, 'data', 'request', ':id')).get(overview_1.requestDetails(server));
        protect(server.at(api, 'data', 'message', ':id')).get(overview_1.messageDetails(server));
        protect(server.at(api, 'data', 'error', ':id')).get(overview_1.errorDetails(server));
        protect(server.at(api, 'file', ':name')).get(files_1.readFile(server)).put(files_1.saveFile(server));
        protect(server.at(api, 'settings')).get(settings_1.readSettings(server)).put(settings_1.saveSettings(server));
        protect(server.at(api, 'settings', 'file')).get(settings_1.downloadSettings(server, config));
        protect(server.at(api, 'injector')).get(injectors_1.readInjectorsSettings(server));
        protect(server.at(api, 'injector', ':name')).get(injectors_1.readInjectorSettings(server)).put(injectors_1.saveInjectorSettings(server));
    }
}
exports.withManagement = withManagement;
