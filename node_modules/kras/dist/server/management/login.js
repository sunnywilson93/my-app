"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userLogin = exports.getAuth = void 0;
const providers = require("../auth");
const url_1 = require("url");
const bearer = 'Bearer ';
function getAuth(server, config) {
    const auth = config.auth;
    const provider = auth && providers[auth.provider];
    if (provider) {
        return (server) => {
            const connectToFeed = server.feed;
            server.feed = (handler) => {
                connectToFeed((ws, req) => {
                    const { token } = url_1.parse(req.url, true).query;
                    if (!Array.isArray(token)) {
                        const valid = provider.validateToken(auth, token);
                        if (valid) {
                            return handler(ws, req);
                        }
                    }
                    ws.close();
                });
                return server;
            };
            return server.any((req, res, next) => {
                const header = req.header('authorization');
                if (header && header.startsWith(bearer)) {
                    const token = header.substr(bearer.length);
                    const valid = provider.validateToken(auth, token);
                    if (valid) {
                        return next();
                    }
                }
                return res.sendStatus(401);
            });
        };
    }
    return (server) => server;
}
exports.getAuth = getAuth;
function userLogin(server, config) {
    const auth = config.auth;
    const provider = auth && providers[auth.provider];
    return (req, res) => {
        const credentials = JSON.parse(req.body || '{}');
        const token = provider && provider.generateToken(auth, credentials);
        if (token) {
            res.json({ token });
        }
        else {
            res.sendStatus(403);
        }
    };
}
exports.userLogin = userLogin;
