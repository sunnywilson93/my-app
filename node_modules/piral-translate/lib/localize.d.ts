import { LocalizationMessages, Localizable } from './types';
declare function defaultFallback(key: string, language: string): string;
export declare class Localizer implements Localizable {
    messages: LocalizationMessages;
    language: string;
    languages: Array<string>;
    private fallback;
    /**
     * Creates a new instance of a localizer.
     */
    constructor(messages: LocalizationMessages, language: string, languages: Array<string>, fallback?: typeof defaultFallback);
    /**
     * Localizes the given key via the global translations.
     * @param key The key of the translation snippet.
     * @param variables The optional variables to use.
     */
    localizeGlobal<T>(key: string, variables?: T): string;
    /**
     * Localizes the given key via the local translations.
     * Uses the global translations as fallback mechanism.
     * @param localMessages The local translations to prefer.
     * @param key The key of the translation snippet.
     * @param variables The optional variables to use.
     */
    localizeLocal<T>(localMessages: LocalizationMessages, key: string, variables?: T): string;
    private localizeBase;
    private translateMessage;
}
export {};
